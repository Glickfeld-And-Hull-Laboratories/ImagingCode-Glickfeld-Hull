clear all;
setpath;

global USER_PROFILE
USER_PROFILE = 'lindsey'; % 

protdir = dirs.images;
%%
newdir = '110425_DR7\run1';
%% register (single plane)
expt = frGetExpt(newdir);

%%
nON = 144;
nOFF = 144;
nCond = 9;
nPlanes = 8;

%% Sort each plane
stack = single(readtiff(expt.dirs.reggreenpn));

for iPlane = 1:nPlanes
   fn = fullfile(outDir,sprintf('%s_plane%i.tif',expt,iPlane));
   writetiff(stack(:,:,iPlane:nPlanes:end), fn);
end
   
%% Volume
stack2 = zeros(240,256,nPlanes);

for iPlane = 1:nPlanes
   stack2(:,:,iPlane)=mean(stack(:,:,iPlane:nPlanes:end),3);
end

fn = fullfile(outDir,[expt 'volume' channel '.tif']);
writetiff(stack2,fn);

%% Register each plane
stable = 140:180;
for iPlane = 1:nPlanes
    fn_in= fullfile(outDir,sprintf('%s_plane%i.tif',expt,iPlane));
    stack3 = readtiff(fn_in);
    av = mean(stack3(:,:,stable),3);
    [out,reg] = stackRegister(stack3,av,10);
    fn_reg = fullfile(outDir,sprintf('%s_plane%i_reg.tif',expt,iPlane));
    writetiff(reg,fn_reg);
    fn_out = fullfile(outDir,sprintf('%s_plane%i_out.m',expt,iPlane));
    save(fn_out, 'out');
end;
%% Trial Avg
for iPlane = 1
    fn= fullfile(outDir,sprintf('%s_plane%i_reg.tif',expt,iPlane));
    stack4 = readtiff(fn);
    stack4_double = double(stack4);
    stack5 = zeros(240,256,epoch+1);
    avg = mean(stack4,3);
    pix = mean(mean(avg));
    for time = 1:epoch;
        stack5(:,:,1) = avg;
        stack5(:,:,(time+1)) = mean(stack4(:,:,time:epoch:end),3);
    end
    fn2 = fullfile(outDir,sprintf('%s_plane%i_avg.tif',expt,iPlane));
    writetiff(stack5,fn2);
    stack6_all = zeros(size(stack4));
    stack6 = zeros(240,256,epoch+1);
    for time = 1:size(stack4,3);
        stack6_all(:,:,time) = (stack4_double(:,:,time)-avg)./avg;
    end
    for time = 1:epoch;
        stack6(:,:,1)= avg/(pix*10);
        stack6(:,:,(time+1)) = mean(stack6_all(:,:,time:epoch:end),3);
    end
    fn3 = fullfile(outDir,sprintf('%s_plane%i_dFoverF.tif',expt,iPlane));
    writetiff(stack6,fn3);
end

%% Find local correlation maps and cell masks
for iPlane = 1:nPlanes
    fn= fullfile(outDir,sprintf('%s_plane%i_reg.tif',expt,iPlane));
    stack7 = readtiff(fn);
    dec = stackGroupProject(stack7,5);
    siz = size(dec);
    r = zeros(240,256);
    b = 5; % border
    fprintf('Computation local correlation:');
    for iy = b+1:240-b
        fprintf('.');
        for ix = b+1:256-b
            sub = dec(iy-1:iy+1,ix-1:ix+1,:);
            r(iy,ix)=mean(triu2vec((corrcoef(reshape(sub,[3*3,750])')),1));
        end;
    end;
    fn_out = fullfile(outDir,sprintf('%s_plane%i_localcormap.mat',expt,iPlane));
    save(fn_out, 'r');
    bwimgcell = imCellEditInteractive(max_proj,[]);
    cell_mask = bwlabel(bwimgcell);
    figure;
    imagesq(imShade(max_proj_avg_adapt,cell_mask>0));
    fn_out = fullfile(outDir,sprintf('%s_plane%i_cellmask.mat',expt,iPlane));
    save(fn_out, 'cell_mask');
end


%% Cell time courses


for iPlane = 2
    fn_mask = fullfile(outDir,sprintf('%s_plane%i_cellmask.mat',expt,iPlane));
    fn_stack = fullfile(outDir,sprintf('%s_plane%i_reg.tif',expt,iPlane));
    load(fn_mask);
    stack = readtiff(fn_stack);
    allcells = max(unique(cell_mask));
    %get time courses and remove low frequencies
    timeCourses = stackGetTimeCourses(stack,cell_mask);
    timeCourses_lowcut = tcLowCut (timeCourses, 200, 'gaussian', 1);
    av = tcCycleAverage(timeCourses_lowcut,epoch);
    %get dF/F for trial
    baseline_all = mean(timeCourses_lowcut(nOFF:(nOFF+nON):end,:));
    dF_all = bsxfun(@minus,timeCourses_lowcut,baseline_all);
    ratio_all = bsxfun(@rdivide,dF_all,baseline_all)*100;
    %get dF/F for average
    baseline = mean(av(nOFF:(nON+nOFF):end,:));
    dF = bsxfun(@minus,av,baseline);
    ratio = bsxfun(@rdivide,dF,baseline)*100;
    %plot overlay of trials 
    for iCell = 1:allcells;
        figure;
        for trial = 1:size(stack,3)/epoch;
            plot(ratio_all(trial+((trial-1)*epoch):epoch*trial, iCell), 'c');
            hold on;
        end
        plot(ratio(:, iCell),'k');
        hold on;
    end
end





%% Find Cells
for iPlane = 1:nPlanes
    fn_mask = fullfile(outDir,sprintf('%s_plane%i_cellmask.mat',expt,iPlane));
    fn_stack = fullfile(outDir,sprintf('%s_plane%i_reg.tif',expt,iPlane));
    load(fn_mask);
    stack = readtiff(fn_stack);
    avg = mean(stack,3);
    figure;
    imagesq(imShade(avg,cell_mask>0));
end

avg_adapt = imScale(stackLocalContrastAdaptation(avg, 30, 1));
figure;
imagesq(avg);
colormap gray;

    
