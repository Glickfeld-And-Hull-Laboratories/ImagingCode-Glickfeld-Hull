clear all
areas = ['PM'];
inj = 'V1';
P = 2;
nON = 12;
nOFF = 12;
nPlanes = 1;
begin = 1;
TFSFetc = [1:2];
pre_win = [7 12];
post_win = [13 24];
Nshuf = 500;
SF_vec0 = [.32 .16 .08 .04 .02]; %flipped to have low to high SF in square  %flipud
TF_vec0 = [1 2 4 8 15];

[tftf,sfsf] = meshgrid(TF_vec0,SF_vec0); 
grid2.sfsf = sfsf;
grid2.tftf = tftf;

dSF = median(diff(log2(SF_vec0)));
dTF = median(diff(log2(TF_vec0)));
SF_vec00 = log2(SF_vec0(1)):(dSF/10):log2(SF_vec0(end));
TF_vec00 = log2(TF_vec0(1)):(dTF/10):log2(TF_vec0(end));
[sfsf00,tftf00]=meshgrid(SF_vec00,TF_vec00);
grid2.sfsf00 = sfsf00;
grid2.tftf00 = tftf00;
for iArea = 1
    matrix = 'SF5xTF5';
    image = areas(iArea,:);
    sum_base = 'G:\users\lindsey\analysisLG\experiments';
    list_fn = fullfile(sum_base, [matrix '_' num2str(P) 'P_' image], [matrix '_' num2str(P) 'P_' inj '_' image '_exp_list.mat']);
    load(list_fn);
    nexp = size(exp_list.mouse_mat,2);
    
    for iexp = 7:12
        mouse = char(exp_list.mouse_mat{iexp});
        date = char(exp_list.date_mat{iexp});
        userun = exp_list.runs_mat{iexp};
        count_protocol = exp_list.prot_mat{iexp};
        run = exp_list.run_mat{iexp};
        blanks = exp_list.blanks_mat{iexp};
        dirs = exp_list.dir_mat{iexp};
        if run == 1
        if dirs ==1
            nCond = 25;
        elseif dirs ==2
            nCond = 50;
        end

        base = 'G:\users\lindsey\analysisLG\active mice';    
        outDir = fullfile(base, mouse,date);
     
        fn_reps= fullfile(outDir,'analysis',[date '_' mouse '_run' num2str(userun) '_reps.mat']);
        load(fn_reps);

        fn_local = fullfile(outDir,'analysis',[date '_' mouse '_run' num2str(userun) '_local_max.mat']);
        load(fn_local)
        
        fn_out = fullfile(outDir, 'analysis', [date '_' mouse '_run' num2str(userun) '_resp.mat']);
        load(fn_out)

        Ind_struct = [];
        start = 1;
        for iCond = 1:25
            nRep = stim_reps(iCond);
            Ind_struct(iCond).all_trials = [start:start-1+nRep];
            start = start+nRep;
        end

        Fit_struct = [];
        for count_shuf = 0:Nshuf
            fprintf('.')
            Im_mat_USE = zeros(size(resp_dFoverF,1), 25);
            Im_mat_std = zeros(size(resp_dFoverF,1), 25);
            dF_mat = zeros(size(resp_dFoverF,1), 25);
            for iCond = 1:25        
                ind_all = Ind_struct(iCond).all_trials;
                if count_shuf > 0 %resample with replacement, don't resample by trial for now because running-rejection may be uneven for various trials..
                    ind_all_1 = ind_all(randsample(length(ind_all),length(ind_all),1));
                else
                    ind_all_1 = ind_all;        
                end
                Im_mat_USE(:,iCond) = mean(resp_dFoverF(:,ind_all_1),2);
                dF_mat(:,iCond) = mean(resp_dF(:,ind_all_1),2);
            end

            start = 1;
            for iCell = 1:n_pix;
                a = Im_mat_USE(iCell,:);
                if max(a,[],2) > 0     
                    b = reshape(a',length(SF_vec0),length(TF_vec0));
                    %b2 = b( ind_SFuse(:,1),ind_TFuse(:,1));
                    data = b';
                    ind0 = find(data<0);
                    data(ind0) = NaN;
                    if count_shuf == 0
                        PLOTIT_FIT = 0;
                        SAVEALLDATA = 1;
                        Fit_2Dellipse_LG
                        eval(['Fit_struct(iCell).True.s_',' = s;']);
                    else
                        SAVEALLDATA = 0;
                        PLOTIT_FIT = 0;
                        Fit_2Dellipse_LG
                        eval(['Fit_struct(iCell).Shuf(count_shuf).s_',' = s;']);
                    end
                end               
            end
        end

        fn_out = fullfile(outDir, 'analysis', [date '_' mouse '_run' num2str(userun) '_Fit_struct.mat']);   
        save(fn_out, 'Fit_struct')    
    end
end