figure;
str_run = strvcat('allrun', 'running', 'norun');
areas = size(roi_avg,2);

TC_avg_all = squeeze(TC_avg);
TC_sem_all = squeeze(TC_sem);

if run ==1;
    TC_avg_all = squeeze(TC_avg(:,:,:,1));
    TC_sem_all = squeeze(TC_sem(:,:,:,1));
elseif areas == 1;
    TC_avg_all = squeeze(TC_avg(:,:,:));
    TC_sem_all = squeeze(TC_sem(:,:,:));
end

for iCond = 1:nCond;
    for iArea = 1:areas;
        h = subplot(sqrt(nCond)+1,sqrt(nCond),iCond);
        if areas==1
        errorbar(1:(nON+nOFF), TC_avg_all(:,iCond), TC_sem_all(:,iCond), col(iArea));
        my = max(max((TC_avg_all),[],2),[],1);
        else    
        errorbar(1:(nON+nOFF), TC_avg_all(:,iArea,iCond), TC_sem_all(:,iArea,iCond), col(iArea));
        my = max(max(max((TC_avg_all),[],3),[],2),[],1);
        end
        set(h,'XTick',[0:(nON+nOFF)/4:(nON+nOFF)]);
        set(h,'XTickLabel',(0:(nON+nOFF)/4:(nON+nOFF)));
        ylim([-.5 (my + 0.1*my)]);
        xlim([0 (nON+nOFF)+2]);
        hold on;
    end 
end
if blanks==1;
    iCond = nCond+1;
    for iArea = 1:areas;
        h=subplot(sqrt(nCond)+1,sqrt(nCond),iCond);
        if areas==1
        errorbar(1:(nON+nOFF), TC_avg_all(:,iCond), TC_sem_all(:,iCond), col(iArea));
        my = max(max((TC_avg_all),[],2),[],1);
        else    
        errorbar(1:(nON+nOFF), TC_avg_all(:,iArea,iCond), TC_sem_all(:,iArea,iCond), col(iArea));
        my = max(max(max((TC_avg_all),[],3),[],2),[],1);
        end
        set(h,'XTick',[0:(nON+nOFF)/4:(nON+nOFF)]);
        set(h,'XTickLabel',(0:(nON+nOFF)/4:(nON+nOFF)));
        ylim([-.5 (my + 0.1*my)]);
        xlim([0 (nON+nOFF)+2]);
        hold on;
    end
end
legend(area_list)
fn_out = fullfile('\\Zmey\storlab\users\Lindsey\Projects\HVAs\Epi Imaging', date, [date '_' mouse '_run' num2str(userun) str_run(1,:) '_SFxTF_TCs.ps']);
print(gcf, '-depsc', fn_out);

if run == 1;
    TC_avg_run = squeeze(TC_avg(:,:,:,2));
    TC_avg_norun = squeeze(TC_avg(:,:,:,3));
    TC_sem_run = squeeze(TC_sem(:,:,:,2));
    TC_sem_norun = squeeze(TC_sem(:,:,:,3));
    for iArea = 1:areas;
        figure;
        my = max(max(max(max(TC_avg(:,iArea,:,2:3),[],4),[],3),[],2),[],1);
        for iCond = 1:nCond
            h = subplot(sqrt(nCond)+1,sqrt(nCond),iCond);
            if areas==1
                errorbar(1:(nON+nOFF), TC_avg_run(:,iCond), TC_sem_run(:,iCond), col(iArea));
                hold on;
                errorbar(1:(nON+nOFF), TC_avg_norun(:,iCond), TC_sem_norun(:,iCond), 'Color',[.8 .8 .8]);
            else    
                errorbar(1:(nON+nOFF), TC_avg_run(:,iArea,iCond), TC_sem_run(:,iArea,iCond), col(iArea));
                hold on;
                errorbar(1:(nON+nOFF), TC_avg_norun(:,iArea,iCond), TC_sem_norun(:,iArea,iCond), 'Color',[.8 .8 .8]);                        
            end
            set(h,'XTick',[0:(nON+nOFF)/4:(nON+nOFF)]);
            set(h,'XTickLabel',(0:(nON+nOFF)/4:(nON+nOFF)));
            ylim([-.5 (my + 0.1*my)]);
            xlim([0 (nON+nOFF)+2]);
        end
        if blanks==1;
            iCond = nCond+1;
            h = subplot(sqrt(nCond)+1,sqrt(nCond),iCond);
            if areas==1
                errorbar(1:(nON+nOFF), TC_avg_run(:,iCond), TC_sem_run(:,iCond), col(iArea));
                hold on;
                errorbar(1:(nON+nOFF), TC_avg_norun(:,iCond), TC_sem_norun(:,iCond), 'Color',[.8 .8 .8]);
            else    
                errorbar(1:(nON+nOFF), TC_avg_run(:,iArea,iCond), TC_sem_run(:,iArea,iCond), col(iArea));
                hold on;
                errorbar(1:(nON+nOFF), TC_avg_norun(:,iArea,iCond), TC_sem_norun(:,iArea,iCond), 'Color',[.8 .8 .8]);                        
            end
            set(h,'XTick',[0:(nON+nOFF)/4:(nON+nOFF)]);
            set(h,'XTickLabel',(0:(nON+nOFF)/4:(nON+nOFF)));
            ylim([-.5 (my + 0.1*my)]);
            xlim([0 (nON+nOFF)+2]);
        end
        legend(area_list(iArea,:))
        fn_out = fullfile('\\Zmey\storlab\users\Lindsey\Projects\HVAs\Epi Imaging', date, [date '_' mouse '_run' num2str(userun) area_list(iArea,:) 'RUNNING_SFxTF_TCs.ps']);
        print(gcf, '-depsc', fn_out);
    end 
end
